//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Web.ProductServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ShortProductDTO", Namespace="http://schemas.datacontract.org/2004/07/DataContracts")]
    [System.SerializableAttribute()]
    public partial class ShortProductDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ColorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ProductIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> QuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> StandardCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubcategoryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ThumbNailPhotoIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Color {
            get {
                return this.ColorField;
            }
            set {
                if ((object.ReferenceEquals(this.ColorField, value) != true)) {
                    this.ColorField = value;
                    this.RaisePropertyChanged("Color");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ProductID {
            get {
                return this.ProductIDField;
            }
            set {
                if ((this.ProductIDField.Equals(value) != true)) {
                    this.ProductIDField = value;
                    this.RaisePropertyChanged("ProductID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductNumber {
            get {
                return this.ProductNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductNumberField, value) != true)) {
                    this.ProductNumberField = value;
                    this.RaisePropertyChanged("ProductNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> StandardCost {
            get {
                return this.StandardCostField;
            }
            set {
                if ((this.StandardCostField.Equals(value) != true)) {
                    this.StandardCostField = value;
                    this.RaisePropertyChanged("StandardCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubcategoryName {
            get {
                return this.SubcategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SubcategoryNameField, value) != true)) {
                    this.SubcategoryNameField = value;
                    this.RaisePropertyChanged("SubcategoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ThumbNailPhotoID {
            get {
                return this.ThumbNailPhotoIDField;
            }
            set {
                if ((this.ThumbNailPhotoIDField.Equals(value) != true)) {
                    this.ThumbNailPhotoIDField = value;
                    this.RaisePropertyChanged("ThumbNailPhotoID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DetailProductDTO", Namespace="http://schemas.datacontract.org/2004/07/DataContracts")]
    [System.SerializableAttribute()]
    public partial class DetailProductDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ColorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] LargePhotosIDsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ProductIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> QuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> StandardCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubcategoryNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Color {
            get {
                return this.ColorField;
            }
            set {
                if ((object.ReferenceEquals(this.ColorField, value) != true)) {
                    this.ColorField = value;
                    this.RaisePropertyChanged("Color");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] LargePhotosIDs {
            get {
                return this.LargePhotosIDsField;
            }
            set {
                if ((object.ReferenceEquals(this.LargePhotosIDsField, value) != true)) {
                    this.LargePhotosIDsField = value;
                    this.RaisePropertyChanged("LargePhotosIDs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ProductID {
            get {
                return this.ProductIDField;
            }
            set {
                if ((this.ProductIDField.Equals(value) != true)) {
                    this.ProductIDField = value;
                    this.RaisePropertyChanged("ProductID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductNumber {
            get {
                return this.ProductNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductNumberField, value) != true)) {
                    this.ProductNumberField = value;
                    this.RaisePropertyChanged("ProductNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> StandardCost {
            get {
                return this.StandardCostField;
            }
            set {
                if ((this.StandardCostField.Equals(value) != true)) {
                    this.StandardCostField = value;
                    this.RaisePropertyChanged("StandardCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubcategoryName {
            get {
                return this.SubcategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SubcategoryNameField, value) != true)) {
                    this.SubcategoryNameField = value;
                    this.RaisePropertyChanged("SubcategoryName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ProductServiceReference.IProductService")]
    public interface IProductService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetShortProducts", ReplyAction="http://tempuri.org/IProductService/GetShortProductsResponse")]
        Web.ProductServiceReference.ShortProductDTO[] GetShortProducts(int skip, int take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetShortProducts", ReplyAction="http://tempuri.org/IProductService/GetShortProductsResponse")]
        System.Threading.Tasks.Task<Web.ProductServiceReference.ShortProductDTO[]> GetShortProductsAsync(int skip, int take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetDetailProduct", ReplyAction="http://tempuri.org/IProductService/GetDetailProductResponse")]
        Web.ProductServiceReference.DetailProductDTO GetDetailProduct(int productID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetDetailProduct", ReplyAction="http://tempuri.org/IProductService/GetDetailProductResponse")]
        System.Threading.Tasks.Task<Web.ProductServiceReference.DetailProductDTO> GetDetailProductAsync(int productID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetProductsCount", ReplyAction="http://tempuri.org/IProductService/GetProductsCountResponse")]
        int GetProductsCount();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetProductsCount", ReplyAction="http://tempuri.org/IProductService/GetProductsCountResponse")]
        System.Threading.Tasks.Task<int> GetProductsCountAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetPhotoThumbnail", ReplyAction="http://tempuri.org/IProductService/GetPhotoThumbnailResponse")]
        byte[] GetPhotoThumbnail(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetPhotoThumbnail", ReplyAction="http://tempuri.org/IProductService/GetPhotoThumbnailResponse")]
        System.Threading.Tasks.Task<byte[]> GetPhotoThumbnailAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetLargePhoto", ReplyAction="http://tempuri.org/IProductService/GetLargePhotoResponse")]
        byte[] GetLargePhoto(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetLargePhoto", ReplyAction="http://tempuri.org/IProductService/GetLargePhotoResponse")]
        System.Threading.Tasks.Task<byte[]> GetLargePhotoAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProductServiceChannel : Web.ProductServiceReference.IProductService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProductServiceClient : System.ServiceModel.ClientBase<Web.ProductServiceReference.IProductService>, Web.ProductServiceReference.IProductService {
        
        public ProductServiceClient() {
        }
        
        public ProductServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProductServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Web.ProductServiceReference.ShortProductDTO[] GetShortProducts(int skip, int take) {
            return base.Channel.GetShortProducts(skip, take);
        }
        
        public System.Threading.Tasks.Task<Web.ProductServiceReference.ShortProductDTO[]> GetShortProductsAsync(int skip, int take) {
            return base.Channel.GetShortProductsAsync(skip, take);
        }
        
        public Web.ProductServiceReference.DetailProductDTO GetDetailProduct(int productID) {
            return base.Channel.GetDetailProduct(productID);
        }
        
        public System.Threading.Tasks.Task<Web.ProductServiceReference.DetailProductDTO> GetDetailProductAsync(int productID) {
            return base.Channel.GetDetailProductAsync(productID);
        }
        
        public int GetProductsCount() {
            return base.Channel.GetProductsCount();
        }
        
        public System.Threading.Tasks.Task<int> GetProductsCountAsync() {
            return base.Channel.GetProductsCountAsync();
        }
        
        public byte[] GetPhotoThumbnail(int id) {
            return base.Channel.GetPhotoThumbnail(id);
        }
        
        public System.Threading.Tasks.Task<byte[]> GetPhotoThumbnailAsync(int id) {
            return base.Channel.GetPhotoThumbnailAsync(id);
        }
        
        public byte[] GetLargePhoto(int id) {
            return base.Channel.GetLargePhoto(id);
        }
        
        public System.Threading.Tasks.Task<byte[]> GetLargePhotoAsync(int id) {
            return base.Channel.GetLargePhotoAsync(id);
        }
    }
}
